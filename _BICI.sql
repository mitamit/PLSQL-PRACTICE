create or replace PROCEDURE BICICLETA1(p_idcomp COMPONENTES.IDCOMP%TYPE)
IS
--v_stock1 COMPONENTES.STOCK%TYPE;
--v_stock2 COMPONENTES.STOCK%TYPE;
v_costeN COMPONENTES.COSTE%TYPE;
v_coste1 COMPONENTES.COSTE%TYPE;
v_coste2 COMPONENTES.COSTE%TYPE;
p_IDCOMPO  COMPONENTES.IDCOMP%TYPE;
v_costeTotal COMPONENTES.COSTE%TYPE := 0;
v_IDCOMP CONTENIDOEN.IDSUBCOMP%TYPE;



CURSOR C1 IS
SELECT comp.COSTE, comp.STOCK, comp.IDCOMP FROM COMPONENTES comp, CONTENIDOEN cont WHERE cont.IDSUBCOMP = comp.IDCOMP AND cont.IDCOMP = p_idcomp FOR UPDATE NOWAIT;

CURSOR  C2 (v_IDCOMP VARCHAR2) IS
SELECT IDSUBCOMP FROM  CONTENIDOEN WHERE IDCOMP = v_IDCOMP FOR UPDATE NOWAIT;


BEGIN
--ESTE ES FIJO, VALOR QUE COGE DE LA PRIMERA TABLA
SELECT COSTE INTO v_costeN FROM COMPONENTES WHERE IDCOMP = p_idcomp;
--UPDATE COMPONENTES SET STOCK = STOCK - 1 WHERE IDCOMP = p_idcomp;
v_costeTotal := v_costeTotal + v_costeN;
imprime(v_costeN);
--COGE VALOR DE LOS SUBCOMPONENTES
OPEN C1;
LOOP
FETCH C1 INTO v_coste1, v_stock1, v_IDCOMP;
EXIT WHEN C1%NOTFOUND;
v_costeTotal := v_costeTotal + v_coste1;
IMPRIME(v_coste1);
UPDATE COMPONENTES SET STOCK = v_stock1 - 1 WHERE CURRENT OF C1;
OPEN C2 (v_IDCOMP);
LOOP
FETCH C2 INTO p_IDCOMPO;
EXIT WHEN C2%NOTFOUND;
SELECT COSTE INTO v_coste2 FROM COMPONENTES WHERE IDCOMP = p_IDCOMPO;
SELECT STOCK INTO v_stock2 FROM COMPONENTES WHERE IDCOMP = p_IDCOMPO;
IMPRIME(v_coste2);
v_costeTotal := v_costeTotal + v_coste2;
UPDATE COMPONENTES SET STOCK = v_stock2 - 1 WHERE CURRENT OF C2;
END LOOP;
CLOSE C2;

END LOOP;

CLOSE C1;


--ponemos condicion en el exit para que no repita el VALOR.




--select para cambiar de una variable varchar a number y coja el coste.

--IMPRIME(v_coste3);







IMPRIME('El precio Total es: ' || v_costeTotal || '€');


END;